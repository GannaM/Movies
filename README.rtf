{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 IMPORTANT BEFORE YOU START\

\b0 \
To build this project you need to add your own API key:\
- into the string resources file as follows:\
<string name="api_key\'94>[YOUR_API_KEY]</string>\
\
- AND in gradle.properties file add the following line:\
API_KEY="[YOUR_API_KEY]"\
\
You can obtain your personal API key at themoviedb.org (https://developers.themoviedb.org/3/getting-started/introduction)\
\
----------------------------------------------------------------------------\
\

\b The Movies App
\b0 \
\
The app shows a list of movies from TheMovieDb.org. A user allowed to change sort oder via a setting  either by most popular or by highest-rated. Also a user can save a movie to a favorite list.\
\
Also tapping on a movie from any other above mentioned lists transitions to a detailed screen with additional information such as: original title, movie thumbnail, synopsis, user rating and release date. Here a user can add/remove a movie to/from the favorite list.\
\
\

\b Paging with Network using PageKeyedDataSource
\b0 \
\
This app demonstrates how to implement Paging library with backend API (TheMovieDb API) with multiple datasource (depending on user's sort preferences).\
\
Favorite movies are stored locally using Room Database. To retrieve favorite movies, standard datasource is used. \
\
\

\b AsyncTaskLoader to fetch Movie's details
\b0 \
\
MovieDetailActivity shows an example how to use AsyncTaskLoader to fetch additional movie details\
\
\

\b Libraries:\

\b0 \
- Retrofit for api communication\
- Picasso for image loading\
- Android Architecture Components\
- Butterknife for data binding\
\
}